language: cpp
git:
  submodules: false

matrix:
  include:
    # gcc-5
    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      sudo: required
      dist: trusty
      cache:
        ccache: true
        timeout: 1000
        directories:
          - $HOME/boost
          - $HOME/protobuf
          - $HOME/zeromq
      addons: &gcc5
        apt:
          packages:
            - cmake
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            
    # Linux clang-3.6 Debug
    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      sudo: required
      dist: trusty
      cache:
        ccache: true
        timeout: 1000
        directories:
          - $HOME/boost
          - $HOME/protobuf
          - $HOME/zeromq
      addons: &clang36
        apt:
          packages:
            - clang-3.6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
branches:
  only:
    - master

before_install:
  # Update submodules
  - git submodule update --init --recursive

  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Wno-ignored-qualifiers"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Wno-ignored-qualifiers"; fi

install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.0-rc3-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi
  ############################################################################
  # Custom script for external dependences
  ############################################################################
  - cd ${DEPS_DIR}
  - wget -O build_deps.sh  https://raw.githubusercontent.com/hanchon/travis_complete_cache/master/build_deps.sh
  - sudo chmod 777 build_deps.sh
  # Install Boost
  - ./build_deps.sh boost
  - export BOOST_OPTS="-DBOOST_ROOT=/home/travis/boost -DBOOST_INCLUDEDIR=/home/travis/boost/include -DBOOST_LIBRARYDIR=/home/travis/boost/lib"    
  # Install ZeroMQ
  - cd ${DEPS_DIR}
  - ./build_deps.sh zeromq
  - export ZEROMQ=" -DZeroMQ_ROOT_DIR=/home/travis/zeromq "  
  # Install Protobuf
  - cd ${DEPS_DIR}
  - ./build_deps.sh protobuf
  - export PROTOBUF=" -DProtobuf_ROOT_DIR=/home/travis/protobuf "
  - export PATH=/home/travis/protobuf/bin:${PATH}
  - sudo ldconfig
  ############################################################################
  # Custom script for internal dependences
  ############################################################################
  - wget -O build_bitprim.sh  https://raw.githubusercontent.com/hanchon/travis_complete_cache/master/build_bitprim.sh
  - sudo chmod 777 build_bitprim.sh
  #Install bitprim-secp256k1
  - ./build_bitprim.sh secp256k1 linux
  #Install bitprim-core
  - ./build_bitprim.sh core linux
  #Install bitprim-protocol
  - ./build_bitprim.sh protocol linux    

  - echo "install"

before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email travis-bot@travis-ci.org

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi

  - cd ${TRAVIS_BUILD_DIR}
  - echo "before_script"
  
script:
  - echo "script"
