language: cpp
git:
  submodules: false

matrix:
  include:
    # gcc-5
    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      sudo: required
      dist: trusty
      cache:
        ccache: true
        timeout: 1000
        directories:
          - $HOME/boost
          - $HOME/protobuf
          - $HOME/zeromq
      addons: &gcc5
        apt:
          packages:
            - cmake
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
            
    # Linux clang-3.6 Debug
    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      sudo: required
      dist: trusty
      cache:
        ccache: true
        timeout: 1000
        directories:
          - $HOME/boost
          - $HOME/protobuf
          - $HOME/zeromq
      addons: &clang36
        apt:
          packages:
            - clang-3.6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
branches:
  only:
    - master

before_install:
  # Update submodules
  - git submodule update --init --recursive

  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Wno-ignored-qualifiers"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Wno-ignored-qualifiers"; fi

install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  ############################################################################
  # Custom script for dependences
  ############################################################################
  - wget -O build_deps.sh  https://raw.githubusercontent.com/hanchon/travis_complete_cache/master/build_deps.sh
  - sudo chmod 777 build_deps.sh
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.0-rc3-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi
    
  ######################################=######################################
  # Install Boost
  ############################################################################
  - cd ${DEPS_DIR}
  - ./dependences.sh boost
  - export BOOST_OPTS="-DBOOST_ROOT=/home/travis/boost -DBOOST_INCLUDEDIR=/home/travis/boost/include -DBOOST_LIBRARYDIR=/home/travis/boost/lib"    
  ############################################################################
  # Install ZeroMQ
  ############################################################################    
  - cd ${DEPS_DIR}
  - ./dependences.sh zeromq
  - export ZEROMQ=" -DZeroMQ_ROOT_DIR=/home/travis/zeromq "  
  ############################################################################
  # Install protobuf
  ############################################################################
  - cd ${DEPS_DIR}
  - ./dependences.sh protobuf
  - export PROTOBUF=" -DProtobuf_ROOT_DIR=/home/travis/protobuf "
  - export PATH=/home/travis/protobuf/bin:${PATH}
  - sudo ldconfig

  ############################################################################
  # secp256k1
  ############################################################################
  - git clone https://github.com/bitprim/secp256k1.git
  - cd secp256k1
  - mkdir build
  - cd build
  - cmake .. -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_EXAMPLES=OFF -DENABLE_MODULE_RECOVERY=ON -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}"
  - make -j2 --silent
  - sudo make install --silent
  - cd ..
  - cd ..

  ############################################################################
  # set libraries
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo ldconfig
    fi

  ############################################################################
  # bitprim-core
  ############################################################################
  - git clone https://github.com/bitprim/bitprim-core.git
  - cd bitprim-core
  - mkdir build
  - cd build
  - cmake .. -DENABLE_TESTS=OFF -DWITH_TESTS=OFF -DWITH_EXAMPLES=OFF -DENABLE_MODULE_RECOVERY=ON -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS}
  - make -j2 --silent
  - sudo make install --silent
  - cd ..
  - cd ..
  ############################################################################
  # set libraries
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo ldconfig
    fi
    
  
  ############################################################################
  # bitprim-protocol
  ############################################################################
  - git clone https://github.com/bitprim/bitprim-protocol.git
  - cd bitprim-protocol
  - mkdir build
  - cd build
  - cmake .. -DENABLE_TESTS=OFF -DWITH_TESTS=OFF ${PROTOBUF} ${ZEROMQ} ${BOOST_OPTS} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}"
  - make -j2 --silent
  - sudo make install --silent
  - cd ..
  - cd ..   
    
  - echo "install"

before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email travis-bot@travis-ci.org

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra"; fi

  - cd ${TRAVIS_BUILD_DIR}
  - echo "before_script"
  
script:
  - echo "script"
